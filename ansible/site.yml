---
# Root playbook

- name: Install docker
  become: true
  hosts: all
  roles:
    - smc40.bit.docker
    - smc40.bit.pki
  tasks:
    - name: Log into private registry and force re-authorization
      community.docker.docker_login:
        registry_url: ghcr.io
        username: git
        password: "{{ gh_pat }}"
- name: Deploy app stack
  hosts: all
  become: true
  tasks:
    - name: "App: Create directories"
      ansible.builtin.file:
        state: directory
        path: "{{ item.path }}"
        mode: "{{ item.mode }}"
        owner: "{{ item.owner | default(omit) }}"
      with_items:
        - { path: "/opt/askyourdocs", mode: '755' }
        - { path: "/opt/solr", mode: '755', owner: '1001' }
        - { path: "/opt/models", mode: '755', owner: '1001' }
        - { path: "/opt/pg-init-scripts", mode: '755', owner: '1001' }
        - { path: "/opt/pg-scripts", mode: '755', owner: '1001' }
        - { path: "/opt/pg-data", mode: '700', owner: '999' }
        - { path: "/opt/keycloak-config", mode: '755', owner: '1001' }
        - { path: "/opt/keycloak-theme", mode: '755', owner: '1001' }
        - { path: "/opt/nginx", mode: '755', owner: '1001' }
    - name: "App: Copy files"
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode }}"
        owner: "{{ item.owner }}"
      notify:
        - Restart nginx
      with_items:
        - { src: "../app/pg-init-scripts/", dest: "/opt/pg-init-scripts", mode: '755', owner: '1001' }
        - { src: "../app/postgres_scripts/", dest: "/opt/pg-scripts", mode: '755', owner: '1001' }
        - { src: "../app/keycloak/realm-export.json", dest: "/opt/keycloak-config/realm-export.json", mode: '755', owner: '1001' }
        - { src: "../app/keycloak/template/", dest: "/opt/keycloak-theme", mode: '755', owner: '1001' }
        - { src: "files/nginx/", dest: "/opt/nginx", mode: '755', owner: '1001' }
    - name: "App: Templating files"
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode }}"
      with_items:
        - { src: "./templates/dotenv.j2", dest: "/opt/askyourdocs/.env", mode: '755'}
        - { src: "./templates/docker-compose.yml.j2", dest: "/opt/askyourdocs/docker-compose.yml", mode: '755'}
    - name: "App: Create and start services"
      community.docker.docker_compose:
        project_src: "/opt/askyourdocs"

  handlers:
    - name: "Restart nginx"
      community.docker.docker_compose:
        project_src: "/opt/askyourdocs"
        restarted: true
        services: [nginx]